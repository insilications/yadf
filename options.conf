[package]
name = yadf
url = file:///insilications/build/clearlinux/packages/yadf/yadf-v0.12.2.tar.gz
archives = 
giturl = https://github.com/BurntSushi/ripgrep.git
domain = 
download_from_git = True
branch = main
force_module = 
force_fullclone = 
archives_from_git = 
alias = 

[autospec]
# build 32 bit libraries
32bit = false
# build 32 bit libraries only
32bit_only = false
# allow package to build with test failures
allow_test_failures = false
# alternative cargo pattern
altcargo1 = true
# alternative pgo flags
altflags_pgo = false
# alternative pgo 32bits flags
altflags_pgo_32 = false
# unset %build ld_as_needed variable
asneeded = false
# this package is trusted enough to automatically update (used by other tools)
autoupdate = false
# extend flags with '-std=gnu++98
broken_c++ = false
# disable parallelization during build
broken_parallel_build = false
# configure build with special options
build_special = false
# configure build with special options 2
build_special2 = false
# show ccache stats after compile
ccstats = false
# this package is a library compatibility package and only ships versioned library files
compat = false
# set conservative build flags
conservative_flags = false
# dev package requires the extras to be installed
dev_requires_extras = false
# disable maintainer mode for autotools
disable_maintainer = false
# pass -ffast-math to compiler
fast-math = false
# alternative flags
fsalt1 = true
# alternative 32bits flags
fsalt1_32 = false
# optimize build for speed over size
funroll-loops = false
# set flags to smallest -02 flags possible
insecure_build = false
# do not remove static libraries
keepstatic = true
# do not require autostart subpackage
no_autostart = false
# disable automatic provides processing
noautoprov = false
# disable automatic requeriments processing
noautoreq = false
# do not generate debuginfo for this package
nodebug = false
# ignore missing build ids
nomissingbuildids = false
# disable stripping binaries
nostrip = true
# configure build also for openmpi
openmpi = false
# optimize build for size over speed
optimize_size = false
# set profile for pgo
pgo = false
# set flags for security-sensitive builds
security_sensitive = false
# do not run test suite
skip_tests = false
# add .so files to the lib package instead of dev
so_to_lib = false
# configure build for avx2
use_avx2 = false
# configure build for avx512
use_avx512 = false
# add clang flags
use_clang = false
# configure build for lto
use_lto = true
# use ninja instead of makefiles
use_ninja = false
# require package verification for build
verify_required = false

